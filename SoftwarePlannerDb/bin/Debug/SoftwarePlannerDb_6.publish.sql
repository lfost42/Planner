/*
Deployment script for SoftwarePlannerDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SoftwarePlannerDb"
:setvar DefaultFilePrefix "SoftwarePlannerDb"
:setvar DefaultDataPath "C:\Users\lynda\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\lynda\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 6f2d740e-56ac-4394-8b49-3811d6a5f2ec is skipped, element [dbo].[Tickets].[TicketType] (SqlSimpleColumn) will not be renamed to TicketTypeId';


GO
PRINT N'Creating Table [dbo].[TaskNotes]...';


GO
CREATE TABLE [dbo].[TaskNotes] (
    [Id]         INT IDENTITY (1, 1) NOT NULL,
    [TaskId]     INT NOT NULL,
    [NoteId]     INT NOT NULL,
    [AssignedId] INT NOT NULL,
    [ChangeId]   INT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Tickets]...';


GO
CREATE TABLE [dbo].[Tickets] (
    [Id]                INT           IDENTITY (1, 1) NOT NULL,
    [TicketName]        VARCHAR (50)  NOT NULL,
    [TicketDescription] VARCHAR (500) NOT NULL,
    [TicketTypeId]      INT           NOT NULL,
    [TicketCreated]     DATETIME2 (7) NOT NULL,
    [TicketUpdated]     DATETIME2 (7) NOT NULL,
    [ChangeId]          INT           NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[TicketTypes]...';


GO
CREATE TABLE [dbo].[TicketTypes] (
    [Id]       INT          IDENTITY (1, 1) NOT NULL,
    [TypeName] VARCHAR (20) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_TaskNotes_Tickets]...';


GO
ALTER TABLE [dbo].[TaskNotes] WITH NOCHECK
    ADD CONSTRAINT [FK_TaskNotes_Tickets] FOREIGN KEY ([TaskId]) REFERENCES [dbo].[Tasks] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_TaskNotes_Notes]...';


GO
ALTER TABLE [dbo].[TaskNotes] WITH NOCHECK
    ADD CONSTRAINT [FK_TaskNotes_Notes] FOREIGN KEY ([NoteId]) REFERENCES [dbo].[Notes] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_TaskNotes_Assigned]...';


GO
ALTER TABLE [dbo].[TaskNotes] WITH NOCHECK
    ADD CONSTRAINT [FK_TaskNotes_Assigned] FOREIGN KEY ([AssignedId]) REFERENCES [dbo].[Assigned] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_TaskNotes_Changes]...';


GO
ALTER TABLE [dbo].[TaskNotes] WITH NOCHECK
    ADD CONSTRAINT [FK_TaskNotes_Changes] FOREIGN KEY ([ChangeId]) REFERENCES [dbo].[Changes] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Tickets_Changes]...';


GO
ALTER TABLE [dbo].[Tickets] WITH NOCHECK
    ADD CONSTRAINT [FK_Tickets_Changes] FOREIGN KEY ([ChangeId]) REFERENCES [dbo].[Changes] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Tickets_TicketType]...';


GO
ALTER TABLE [dbo].[Tickets] WITH NOCHECK
    ADD CONSTRAINT [FK_Tickets_TicketType] FOREIGN KEY ([TicketTypeId]) REFERENCES [dbo].[TicketTypes] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_TicketNotes_Tickets]...';


GO
ALTER TABLE [dbo].[TicketNotes] WITH NOCHECK
    ADD CONSTRAINT [FK_TicketNotes_Tickets] FOREIGN KEY ([TicketId]) REFERENCES [dbo].[Tickets] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6f2d740e-56ac-4394-8b49-3811d6a5f2ec')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6f2d740e-56ac-4394-8b49-3811d6a5f2ec')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[TaskNotes] WITH CHECK CHECK CONSTRAINT [FK_TaskNotes_Tickets];

ALTER TABLE [dbo].[TaskNotes] WITH CHECK CHECK CONSTRAINT [FK_TaskNotes_Notes];

ALTER TABLE [dbo].[TaskNotes] WITH CHECK CHECK CONSTRAINT [FK_TaskNotes_Assigned];

ALTER TABLE [dbo].[TaskNotes] WITH CHECK CHECK CONSTRAINT [FK_TaskNotes_Changes];

ALTER TABLE [dbo].[Tickets] WITH CHECK CHECK CONSTRAINT [FK_Tickets_Changes];

ALTER TABLE [dbo].[Tickets] WITH CHECK CHECK CONSTRAINT [FK_Tickets_TicketType];

ALTER TABLE [dbo].[TicketNotes] WITH CHECK CHECK CONSTRAINT [FK_TicketNotes_Tickets];


GO
PRINT N'Update complete.';


GO
